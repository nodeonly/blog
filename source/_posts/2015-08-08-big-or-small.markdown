---
layout: post
title: "big or small"
description: ""
keywords: ""
category: 
tags: []
---

有人质问我，说我带他们的方法矛盾

- 之前是新项目，我让他们在项目里学，不要自学
- 现在是已有项目，我让他们在外面学，不让在里面练习

我真的是矛盾的么？我想有必要来理解一下开发里的大和小的问题，以及如何参与新项目和老项目的开发

## 新项目

如果项目是全新的，那么你如果能全程参与，你还需要在外面学别的东西么？

- 从搭架子开始
- 增加各种库，以及为啥增加
- 真实的业务逻辑
- 如何在项目里思考和平衡架构上的一些原则
- 理解整个软件开发里的大局观

还是那句话，完全从0开始的项目，你只要跟着做，绝对是进步最快的。

Practice makes perfect！

## 已有项目

已有项目，比如有几万行代码，已有很多逻辑，甚至更多，你如何能快速接手这个项目呢？别说是新手，就是有经验几年的老人也未必敢说轻易，不只是技术上的问题，还有大量业务逻辑，这是完全无法看文档就容易理解的。

对于这样的项目，通常做法是把西瓜切成小块，然后再吃。。。

如果是你一个新人，尤其要如此，比如从模型开始看，根据分配的功能一点一点去深入，但在项目里代码太多，很多时候莫名其妙的报错

我举个浅显的粗鄙的例子，不如find之后populate，这样简单的操作，本身他自己对mongoose不熟，find后面都不知道加回调，再加上一个populate是不是更难受？如果再加上promiase，这个人是不是会疯掉？

这时候最好的办法就是一个一个攻破，问题细化

- 先了解mongoose基本的crud
- 了解如何建立模型之间的关系
- 了解如何使用populate完成模型关联
- 然后再加上promise，重构上面的代码

如果不太傻的程序员，基本都能了解整个流程，甚至是举一反三，就学会了如何去用。然后再项目里实践就慢慢成长起来了

## 忌讳：眼高手低

已有的项目里，很多人一拿到项目就各种扫代码，如果水平很高的，这叫了解代码结构，快速上手，如果是一个新手，那就得叫“眼高手低综合症”

本来代码基本的东东都叫不准，看里面的代码不是更晕嘛？看啥都像会，都是函数，变量，三大结构，可实际呢？

编码，没有捷径，踏踏实实的写吧，多测多总结，才是正道

像上面说的问题化繁为简更是一种本事

## 关于三遍

网上流传“重要的事情说三遍”

如果代码记不住，你就敲三次

如果还记不住，你就再敲三次

如果还还记不住，你就再敲三次

如果你是拷贝粘贴，对不起，你这辈子写代码也就这样了，人没追求，太可怕了。。。。


全文完

欢迎关注我的公众号【node全栈】

![](/img/node全栈-公众号.png)
